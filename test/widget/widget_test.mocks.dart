// Mocks generated by Mockito 5.3.2 from annotations
// in riverpod_init/test/widget/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:riverpod_init/src/data/random_fact.dart' as _i5;
import 'package:riverpod_init/src/domain/random_fact_repository.dart' as _i3;
import 'package:riverpod_init/src/network/common/api_response.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0<T> extends _i1.SmartFake
    implements _i2.ApiResponse<T> {
  _FakeApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RandomFactRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRandomFactRepository extends _i1.Mock
    implements _i3.RandomFactRepository {
  MockRandomFactRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiResponse<_i5.RandomFact>> getRandomFact() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRandomFact,
          [],
        ),
        returnValue: _i4.Future<_i2.ApiResponse<_i5.RandomFact>>.value(
            _FakeApiResponse_0<_i5.RandomFact>(
          this,
          Invocation.method(
            #getRandomFact,
            [],
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse<_i5.RandomFact>>);
}
